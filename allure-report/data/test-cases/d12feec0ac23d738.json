{"uid":"d12feec0ac23d738","name":"test_CarNames[chrome-Hyundai-Hyundai Cars]","fullName":"test_CarWale.Test_CarWale#test_CarNames","historyId":"4e7ff4587f3ead2654d99a59194e730e","time":{"start":1659507627114,"stop":1659507630901,"duration":3787},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'","statusTrace":"self = <TestCases.test_CarWale.Test_CarWale object at 0x000002122C36E770>\ncarBrand = 'Hyundai', carTitle = 'Hyundai Cars'\n\n    @pytest.mark.parametrize(\"carBrand, carTitle\", dataprovider.get_data(\"NewCarsTest\"))\n    def test_CarNames(self, carBrand, carTitle):\n        log.logger.info(\"******* Inside Car Names Test ********\")\n        home = CarWale_HomePage(self.driver)\n        car = CarWaleBase(self.driver)\n        time.sleep(2)\n    \n        if carBrand == \"Honda\":\n            home.gotoNewCars().selectHonda()\n            title = car.getCarTitle()\n            print(\"Title of page is : \" + title)\n            assert title == carTitle, \"Not on correct page as title is different\"\n            car.getCarName()\n        elif carBrand == \"Toyota\":\n            home.gotoNewCars().selectToyota()\n            title = car.getCarTitle()\n            print(\"Title of page is : \" + title)\n            assert title == carTitle, \"Not on correct page as title is different\"\n            car.getCarName()\n        elif carBrand == \"Hyundai\":\n            home.gotoNewCars().selectHyundai()\n            title = car.getCarTitle()\n            print(\"Title of page is : \" + title)\n            assert title == carTitle, \"Not on correct page as title is different\"\n>           car.getCarName()\n\ntest_CarWale.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.CarWale_Base.CarWaleBase object at 0x000002122D4747C0>\n\n    def getCarName(self):\n>       carNames = self.driver.find_elements(By.XPATH, ConfigReader.readConfig(\"locators\", \"car_Names_XPATH\")).text\nE       AttributeError: 'list' object has no attribute 'text'\n\n..\\Pages\\CarWale_Base.py:15: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_browser","time":{"start":1659507617238,"stop":1659507627110,"duration":9872},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'","statusTrace":"self = <TestCases.test_CarWale.Test_CarWale object at 0x000002122C36E770>\ncarBrand = 'Hyundai', carTitle = 'Hyundai Cars'\n\n    @pytest.mark.parametrize(\"carBrand, carTitle\", dataprovider.get_data(\"NewCarsTest\"))\n    def test_CarNames(self, carBrand, carTitle):\n        log.logger.info(\"******* Inside Car Names Test ********\")\n        home = CarWale_HomePage(self.driver)\n        car = CarWaleBase(self.driver)\n        time.sleep(2)\n    \n        if carBrand == \"Honda\":\n            home.gotoNewCars().selectHonda()\n            title = car.getCarTitle()\n            print(\"Title of page is : \" + title)\n            assert title == carTitle, \"Not on correct page as title is different\"\n            car.getCarName()\n        elif carBrand == \"Toyota\":\n            home.gotoNewCars().selectToyota()\n            title = car.getCarTitle()\n            print(\"Title of page is : \" + title)\n            assert title == carTitle, \"Not on correct page as title is different\"\n            car.getCarName()\n        elif carBrand == \"Hyundai\":\n            home.gotoNewCars().selectHyundai()\n            title = car.getCarTitle()\n            print(\"Title of page is : \" + title)\n            assert title == carTitle, \"Not on correct page as title is different\"\n>           car.getCarName()\n\ntest_CarWale.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.CarWale_Base.CarWaleBase object at 0x000002122D4747C0>\n\n    def getCarName(self):\n>       carNames = self.driver.find_elements(By.XPATH, ConfigReader.readConfig(\"locators\", \"car_Names_XPATH\")).text\nE       AttributeError: 'list' object has no attribute 'text'\n\n..\\Pages\\CarWale_Base.py:15: AttributeError","steps":[],"attachments":[{"uid":"4d9c48ec5c675330","name":"log","source":"4d9c48ec5c675330.txt","type":"text/plain","size":319}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"get_browser::0","time":{"start":1659507631434,"stop":1659507633700,"duration":2266},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('log_on_failure', 'get_browser')"},{"name":"suite","value":"test_CarWale"},{"name":"subSuite","value":"Test_CarWale"},{"name":"host","value":"LOVEPREET-LAPTOP"},{"name":"thread","value":"23492-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_CarWale"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"carBrand","value":"'Hyundai'"},{"name":"carTitle","value":"'Hyundai Cars'"},{"name":"get_browser","value":"'chrome'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('log_on_failure', 'get_browser')"]},"source":"d12feec0ac23d738.json","parameterValues":["'Hyundai'","'Hyundai Cars'","'chrome'"]}