{"uid":"66eaa019682fd7d7","name":"test_CarNames[chrome-Honda-Honda Cars]","fullName":"test_CarWale.Test_CarWale#test_CarNames","historyId":"7a2871346917afdd55ce6f8af3b04c95","time":{"start":1659507594321,"stop":1659507598198,"duration":3877},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'","statusTrace":"self = <TestCases.test_CarWale.Test_CarWale object at 0x000002122C36F2E0>\ncarBrand = 'Honda', carTitle = 'Honda Cars'\n\n    @pytest.mark.parametrize(\"carBrand, carTitle\", dataprovider.get_data(\"NewCarsTest\"))\n    def test_CarNames(self, carBrand, carTitle):\n        log.logger.info(\"******* Inside Car Names Test ********\")\n        home = CarWale_HomePage(self.driver)\n        car = CarWaleBase(self.driver)\n        time.sleep(2)\n    \n        if carBrand == \"Honda\":\n            home.gotoNewCars().selectHonda()\n            title = car.getCarTitle()\n            print(\"Title of page is : \" + title)\n            assert title == carTitle, \"Not on correct page as title is different\"\n>           car.getCarName()\n\ntest_CarWale.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.CarWale_Base.CarWaleBase object at 0x000002122C3464A0>\n\n    def getCarName(self):\n>       carNames = self.driver.find_elements(By.XPATH, ConfigReader.readConfig(\"locators\", \"car_Names_XPATH\")).text\nE       AttributeError: 'list' object has no attribute 'text'\n\n..\\Pages\\CarWale_Base.py:15: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_browser","time":{"start":1659507577532,"stop":1659507594318,"duration":16786},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'","statusTrace":"self = <TestCases.test_CarWale.Test_CarWale object at 0x000002122C36F2E0>\ncarBrand = 'Honda', carTitle = 'Honda Cars'\n\n    @pytest.mark.parametrize(\"carBrand, carTitle\", dataprovider.get_data(\"NewCarsTest\"))\n    def test_CarNames(self, carBrand, carTitle):\n        log.logger.info(\"******* Inside Car Names Test ********\")\n        home = CarWale_HomePage(self.driver)\n        car = CarWaleBase(self.driver)\n        time.sleep(2)\n    \n        if carBrand == \"Honda\":\n            home.gotoNewCars().selectHonda()\n            title = car.getCarTitle()\n            print(\"Title of page is : \" + title)\n            assert title == carTitle, \"Not on correct page as title is different\"\n>           car.getCarName()\n\ntest_CarWale.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.CarWale_Base.CarWaleBase object at 0x000002122C3464A0>\n\n    def getCarName(self):\n>       carNames = self.driver.find_elements(By.XPATH, ConfigReader.readConfig(\"locators\", \"car_Names_XPATH\")).text\nE       AttributeError: 'list' object has no attribute 'text'\n\n..\\Pages\\CarWale_Base.py:15: AttributeError","steps":[],"attachments":[{"uid":"e0abb94c71e4179","name":"log","source":"e0abb94c71e4179.txt","type":"text/plain","size":317}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"get_browser::0","time":{"start":1659507598879,"stop":1659507601205,"duration":2326},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('log_on_failure', 'get_browser')"},{"name":"suite","value":"test_CarWale"},{"name":"subSuite","value":"Test_CarWale"},{"name":"host","value":"LOVEPREET-LAPTOP"},{"name":"thread","value":"23492-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_CarWale"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"carBrand","value":"'Honda'"},{"name":"carTitle","value":"'Honda Cars'"},{"name":"get_browser","value":"'chrome'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('log_on_failure', 'get_browser')"]},"source":"66eaa019682fd7d7.json","parameterValues":["'Honda'","'Honda Cars'","'chrome'"]}